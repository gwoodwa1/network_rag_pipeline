{"pandoc-api-version":[1,23,1],"meta":{"author":{"t":"MetaInlines","c":[{"t":"Str","c":"Security"},{"t":"Space"},{"t":"Str","c":"Team"}]},"category":{"t":"MetaInlines","c":[{"t":"Str","c":"security"}]},"date":{"t":"MetaInlines","c":[{"t":"Str","c":"2024-01-25"}]},"description":{"t":"MetaInlines","c":[{"t":"Str","c":"Security"},{"t":"Space"},{"t":"Str","c":"best"},{"t":"Space"},{"t":"Str","c":"practices"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"implementation"},{"t":"Space"},{"t":"Str","c":"guidelines"}]},"id":{"t":"MetaInlines","c":[{"t":"Str","c":"security-guidelines"}]},"title":{"t":"MetaInlines","c":[{"t":"Str","c":"Security"},{"t":"Space"},{"t":"Str","c":"Guidelines"}]}},"blocks":[{"t":"RawBlock","c":["json","{\n  \"@context\": {\n    \"@vocab\": \"https://schema.org/\",\n    \"sections\": {\n      \"@container\": \"@list\"\n    }\n  },\n  \"@graph\": [\n    {\n      \"@context\": {\n        \"@vocab\": \"https://schema.org/\",\n        \"sections\": {\n          \"@container\": \"@list\"\n        }\n      },\n      \"@type\": \"Document\",\n      \"@id\": \"security-guidelines\",\n      \"filename\": \"unknown\",\n      \"title\": \"Security Guidelines\",\n      \"description\": \"Security best practices and implementation guidelines\",\n      \"dateCreated\": \"2024-01-25\",\n      \"author\": \"Security Team\",\n      \"sections\": [\n        {\n          \"@type\": \"Section\",\n          \"@id\": \"unknown-sec-2-security-guidelines\",\n          \"title\": \"Security Guidelines\",\n          \"level\": 1,\n          \"content\": \"This document outlines security best practices and implementation guidelines for our system.\"\n        },\n        {\n          \"@type\": \"Section\",\n          \"@id\": \"unknown-sec-3-authentication-authorization\",\n          \"title\": \"Authentication & Authorization\",\n          \"level\": 2,\n          \"content\": \"### JWT Token Security\\n\\nJSON Web Tokens (JWT) are used for stateless authentication:\\n\\nTokens expire after 1 hour for securityRefresh tokens are valid for 30 daysUse strong, random secrets for token signingImplement token blacklisting for logout\\n\\n```javascript\\nconst jwt = require('jsonwebtoken');\\n\\nconst generateToken = (user) => {\\n  return jwt.sign(\\n    { id: user.id, email: user.email },\\n    process.env.JWT_SECRET,\\n    { expiresIn: '1h' }\\n  );\\n};\\n```\\n\\n### Password Security\\n\\nPassword handling requirements: - Minimum 8 characters with mixed case, numbers, symbols - Hash passwords using bcrypt with salt rounds \\u2265 12 - Implement password history to prevent reuse - Enforce password rotation every 90 days\"\n        },\n        {\n          \"@type\": \"Section\",\n          \"@id\": \"unknown-sec-4-input-validation\",\n          \"title\": \"Input Validation\",\n          \"level\": 2,\n          \"content\": \"### SQL Injection Prevention\\n\\nAlways use parameterized queries or ORMs:\\n\\n```sql\\n-- Bad: Direct string concatenation\\nSELECT * FROM users WHERE email = '\\\" + userInput + \\\"'\\n\\n-- Good: Parameterized query\\nSELECT * FROM users WHERE email = ?\\n```\\n\\n### XSS Prevention\\n\\nSanitize all user inputs: - Escape HTML entities in output - Use Content Security Policy (CSP) headers - Validate input on both client and server side\"\n        },\n        {\n          \"@type\": \"Section\",\n          \"@id\": \"unknown-sec-5-data-protection\",\n          \"title\": \"Data Protection\",\n          \"level\": 2,\n          \"content\": \"### Encryption at Rest\\n\\nSensitive data must be encrypted using AES-256:\\n\\n```python\\nfrom cryptography.fernet import Fernet\\n\\ndef encrypt_sensitive_data(data, key):\\n    cipher = Fernet(key)\\n    encrypted_data = cipher.encrypt(data.encode())\\n    return encrypted_data\\n```\\n\\n### Encryption in Transit\\n\\nAll communications must use TLS 1.2 or higher: - HTTPS for web traffic - TLS for database connections - mTLS for service-to-service communication\"\n        },\n        {\n          \"@type\": \"Section\",\n          \"@id\": \"unknown-sec-6-monitoring-logging\",\n          \"title\": \"Monitoring & Logging\",\n          \"level\": 2,\n          \"content\": \"### Security Event Logging\\n\\nLog all security-relevant events: - Authentication attempts (success/failure) - Authorization failures - Data access patterns - Admin actions\\n\\n### Incident Response\\n\\nIncident response procedures: 1. Immediate containment 2. Impact assessment 3. Evidence collection 4. System recovery 5. Post-incident review\"\n        },\n        {\n          \"@type\": \"Section\",\n          \"@id\": \"unknown-sec-7-compliance-requirements\",\n          \"title\": \"Compliance Requirements\",\n          \"level\": 2,\n          \"content\": \"### GDPR Compliance\\n\\nData protection measures: - Right to be forgotten implementation - Data portability features - Consent management - Data minimization principles\\n\\n### SOC 2 Type II\\n\\nControl objectives: - Security controls testing - Availability monitoring - Processing integrity validation - Confidentiality protection - Privacy safeguards\"\n        }\n      ]\n    }\n  ]\n}"]}]}
